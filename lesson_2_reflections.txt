What happens when you initialize a repository? Why do you need to do it?
it will create a .git file which will store the snapshot of the commited files at every commit.
---------------------------------------------------------------------------------------------

How is the staging area different from the working directory and the repository? What value do you think it offers?

staging area is an intermediate between working directory and the repository. 
using this u can add multiple files to the staging area and make the whole change as single commit
this way it helps to achive the idea of single commit per single logical change.
----------------------------------------------------------------------------------------------

How can you use the staging area to make sure you have one commit per logical change?
	you can compare the staging area with the working directory to find what changes you have made and add only the things you wanted to be changed in this commit and remove others which u don't want to include in this commit. this ensures that its only one logical commit is commited.

	Also you can compare the staging area with the most resent commit in the repository using the 
	git diff --staged cmd.. this way u can ensure that what you are trying to commit is exactly what you wanted to change.
--------------------------------------------------------------------------------------------------

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	you can create a new branch for experimental purposes
	try out some new features
	add a different feature or seperatean app 
--------------------------------------------------------------------------------------------------

How do the diagrams help you visualize the branch structure?
	using diagram you can vizhualize the structure of commits and branches. using this u can get to know which commit won't show up in the git log command.
----------------------------------------------------------------------------------------------------]

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	when you merge two branches they will be combined together to form a single branch.


==================================================================================================

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	automatic merging may rise a conflict because sometimes git doesn't know how to merge when ther are two people working seperately changed the same line of code. git doesn't know which line to keep and which line do add so it rises a conflict in automatic merging.
==================================================================================================
